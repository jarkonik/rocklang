mem_set = (vec: vec, val: f64, n: f64): vec => {
	i = 0
	while i < n {
		vec_set(vec, i, val)
		i = i + 1
	}
	vec
}

sieve = (n: f64): void => {
	v = vec_new()
	prime = mem_set(v, 1, n + 1)

	p = 2

	while p * p <= n {
		if vec_get(prime, p) == 1 {
			i = p * p
			while i <= n {
				vec_set(prime, i, 0)
				i = i + p
			}
		}

		p = p + 1
	}

	p = 2

	while p <= n {
		if vec_get(prime, p) == 1 {
			print(string(p))
			print("\n")
		}

		p = p + 1
	}
}

sieve(10)
